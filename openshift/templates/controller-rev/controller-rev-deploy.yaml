apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for a .NET Core OIDC Controller
    tags: dotnet
  name: ${PREFIX}${NAME}-deployment-template
objects:
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${PREFIX}${NAME}-allow-ingress
      labels:
        name: ${PREFIX}${NAME}-allow-ingress
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the vc-authn-controller container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          name: ${PREFIX}${NAME}
          app: ${APP_NAME}
          app-group: ${APP_GROUP}
          role: ${PREFIX}${ROLE}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the vc-authn agent to access the controller.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${PREFIX}${AGENT_ROLE}
                  app: ${APP_NAME}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: 8080
      podSelector:
        matchLabels:
          name: ${PREFIX}${NAME}
          app: ${APP_NAME}
          app-group: ${APP_GROUP}
          role: ${PREFIX}${ROLE}
          env: ${TAG_NAME}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    stringData:
      controller-api-key: ${CONTROLLER_API_KEY}
    type: Opaque

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_GROUP}
        app.kubernetes.io/part-of: ${APP_GROUP}
        name: ${PREFIX}${NAME}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            name: ${PREFIX}${NAME}
            app: ${APP_NAME}
            app.kubernetes.io/part-of: ${APP_NAME}
            app-group: ${APP_GROUP}
            role: ${PREFIX}${ROLE}
            env: ${TAG_NAME}
        spec:
          volumes:
            - name: ${PREFIX}${NAME}-data
              persistentVolumeClaim:
                claimName: ${PREFIX}${NAME}
          containers:
            - image: ${PREFIX}${NAME}
              imagePullPolicy: Always
              name: ${PREFIX}${NAME}
              ports:
                - containerPort: 5000
                  protocol: TCP
              env:
                - name: IdentityServer__ConnectionStrings__Database
                  valueFrom:
                    secretKeyRef:
                      name: ${PREFIX}database
                      key: database-connectionstring
                - name: UrlShortenerService__ConnectionStrings__Database
                  valueFrom:
                    secretKeyRef:
                      name: ${PREFIX}database
                      key: database-connectionstring
                - name: SessionStorageService__ConnectionStrings_Database
                  valueFrom:
                    secretKeyRef:
                      name: ${PREFIX}database
                      key: database-connectionstring
                - name: IdentityServer__CertificateFilename
                  value: ${CONTROLLER_CERTIFICATE_FILE_PATH}
                - name: IdentityServer__PublicOrigin
                  value: https://${APPLICATION_DOMAIN}
                - name: ACAPY__AdminUrl
                  value: ${AGENT_ADMIN_URL}
                - name: ACAPY__AgentUrl
                  value: ${AGENT_PUBLIC_URL}
                - name: UrlShortenerService__BaseUrl
                  value: https://${APPLICATION_DOMAIN}/url
                - name: SwaggerEnabled
                  value: ${SWAGGER_ENABLED}
                - name: ApiKey
                  valueFrom:
                    secretKeyRef:
                      name: ${PREFIX}${NAME}
                      key: controller-api-key
                - name: ACAPY__AdminURLApiKey
                  valueFrom:
                    secretKeyRef:
                      name: vc-authn-agent-rev
                      key: admin-api-key
                - name: ASPNETCORE_URLS
                  value: ${ASPNETCORE_URLS}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: ${PREFIX}${NAME}-data
                  mountPath: ${MOUNT_PATH}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${PREFIX}${NAME}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${PREFIX}${NAME}:${TAG_NAME}

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    spec:
      storageClassName: ${PERSISTENT_VOLUME_CLASS}
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${PERSISTENT_VOLUME_SIZE}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${PREFIX}${NAME}
          port: 5000
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${PREFIX}${NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      name: ${PREFIX}${NAME}
      labels:
        name: ${PREFIX}${NAME}
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${PREFIX}${ROLE}
        env: ${TAG_NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${PREFIX}${NAME}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${PREFIX}${NAME}
        weight: 100

parameters:
  - description: The name assigned to all of the openshift objects defined in this template. It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: controller
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: vc-authn-oidc
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the components in this project.
    required: true
    value: vc-authn-oidc
  - name: PREFIX
    displayName: Prefix
    description: A name prefix used for all objects
    required: false
    value: vc-authn-
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies
    required: true
    value: controller
  - name: AGENT_ROLE
    displayName: Agent Role
    description: The role of the agent service within the application - used for Network Policies
    required: true
    value: agent
  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: ""
  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The name of the namespace being deployed to..
    required: true
    value: e79518
  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: latest
  - name: APPLICATION_DOMAIN
    description: The exposed hostname that will route to the service, e.g., myappname.apps.silver.devops.gov.bc.ca, if left blank a value will be defaulted.
    displayName: Application Hostname
    value: ""
  - name: AGENT_ADMIN_URL
    displayName: The controller agent admin URL
    description: The controller agent admin URL
    required: true
    value: http://vc-authn-agent:8024
  - name: AGENT_PUBLIC_URL
    displayName: The controller agent public URL
    description: The controller agent public URL
    required: true
    value: ""
  - name: CONTROLLER_CERTIFICATE_FILE_PATH
    displayName: Certificate File Path
    description: File path to the RSA certificate.
    required: true
    value: /controller-data/secret.rsa
  - name: ASPNETCORE_URLS
    displayName: ASP.Net Core URLs
    description: ASP.Net Core URLs.
    required: true
    value: http://*:8080
  - name: CONTROLLER_API_KEY
    displayName: Controller API key
    description: API key for the OIDC controlelr
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: SWAGGER_ENABLED
    displayName: Swagger Enabled
    description: Flag controlling wether teh Swagger API interface should be enabled.
    required: false
    value: "false"
  - name: MOUNT_PATH
    displayName: Mount Path
    description: The path to mount the persistent volume.
    required: true
    value: /controller-data
  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 1Gi
  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; gluster-file, gluster-block, gluster-file-db, netapp-file-standard, netapp-block-standard
    required: false
    value: netapp-file-standard
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 128Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
